{"version":3,"sources":["withErrorHandler/withErrorHandler.js","hooks/http-error-handler.js","constants/messageType.js","config/axios.js","store/actions/auth.js","constants/authOptions.js","containers/Auth/Auth.js","components/Navigation/Navigation.js","containers/App/App.js","store/reducers/auth.js","store/reducers/message.js","store/storeConfig.js","index.js","store/actions/message.js","UI/Input.js"],"names":["withErrorHandler","WrappedComponent","props","useState","error","setError","reqInterceptor","axios","interceptors","request","use","req","Promise","resolve","err","reject","message","resInterceptor","response","res","data","errors","useEffect","eject","useHttpErrorHandler","clearError","Dialog","onClose","aria-labelledby","open","DialogTitle","id","MessageType","To","From","defaults","withCredentials","AUTHENTICATE","SIGNOUT","authenticate","url","values","dispatch","a","post","user","type","value","AuthOptions","history","disptach","useDispatch","formik","useFormik","initialValues","email","userId","authMethod","validationSchema","Yup","required","onSubmit","Paper","elevation","className","title","handleSubmit","RadioGroup","aria-label","name","onChange","handleChange","FormControlLabel","control","Radio","label","Input","touched","errorMessage","variant","Button","color","fullWidth","Navigation","useSelector","state","auth","activeClassName","to","onClick","ComposeEmail","React","lazy","ManageEmail","App","useHistory","get","currentUser","console","log","isAuth","push","app","component","Auth","from","fallback","CircularProgress","path","initialState","initialSatate","messagesSent","messagesReccived","store","createStore","combineReducers","action","CREATE_MESSAGE","GET_MESSAGES","messages","sended","reccived","DELETE_MESSAGE","key","messgeType","filter","msg","messageId","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById","createMessage","then","getMessages","deleteMessage","delete"],"mappings":"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","file":"static/js/main.130fb68d.chunk.js","sourcesContent":["import React from 'react';\nimport { Dialog, DialogTitle } from '@material-ui/core';\nimport useHttpErrorHandler from '../hooks/http-error-handler';\n\nconst withErrorHandler = (WrappedComponent) => {\n  return (props) => {\n    const [error, clearError] = useHttpErrorHandler();\n\n    return (\n      <div>\n        <Dialog\n          onClose={clearError}\n          aria-labelledby='error-modal-title'\n          open={error}>\n          <DialogTitle id='error-modal'>Error occured: {error}</DialogTitle>\n        </Dialog>\n        <WrappedComponent {...props} />\n      </div>\n    );\n  };\n};\n\nexport default withErrorHandler;\n","import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default () => {\n  const [error, setError] = useState();\n\n  const reqInterceptor = axios.interceptors.request.use(\n    (req) => {\n      setError(null);\n      return Promise.resolve(req);\n    },\n    (err) => {\n      setError(true);\n      return Promise.reject(err.message);\n    }\n  );\n  const resInterceptor = axios.interceptors.response.use(\n    (res) => {\n      setError(null);\n      return Promise.resolve(res);\n    },\n    (err) => {\n      setError(err?.response?.data.errors[0].message || err.message);\n      return Promise.reject(err);\n    }\n  );\n\n  useEffect(() => {\n    return () => {\n      axios.interceptors.request.eject(reqInterceptor);\n      axios.interceptors.response.eject(resInterceptor);\n    };\n  }, [reqInterceptor, resInterceptor]);\n\n  const errorConfirmedHandler = () => {\n    setError(null);\n  };\n  return [error, errorConfirmedHandler];\n};\n","export const MessageType = {\r\n  To: 'to',\r\n  From: 'From',\r\n};\r\n","import axios from 'axios';\r\n\r\naxios.defaults.withCredentials = true;\r\nif (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\r\n  axios.defaults.baseURL = 'http://localhost:4000';\r\n}\r\n","import axios from 'axios';\r\n\r\nexport const AUTHENTICATE = 'authenticate';\r\nexport const SIGNOUT = 'signout';\r\n\r\nexport const autoAuthenticate = () => {\r\n  return async (dispatch) => {\r\n    const { data: user } = await axios.get('/api/users/currentuser');\r\n    dispatch({\r\n      type: AUTHENTICATE,\r\n      value: user.currentUser,\r\n    });\r\n  };\r\n};\r\n\r\nexport const authenticate = (url, values) => {\r\n  return async (dispatch) => {\r\n    const { data: user } = await axios.post(url, values);\r\n    dispatch({\r\n      type: AUTHENTICATE,\r\n      value: user,\r\n    });\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return async (dispatch) => {\r\n    await axios.post('/api/users/signout');\r\n    dispatch({\r\n      type: SIGNOUT,\r\n    });\r\n  };\r\n};\r\n","export const AuthOptions = {\r\n  SIGNIN: 'signin',\r\n  SIGNUP: 'signup',\r\n};\r\n","import React from 'react';\r\nimport './Auth.scss';\r\nimport {\r\n  FormControlLabel,\r\n  RadioGroup,\r\n  Radio,\r\n  Button,\r\n  Paper,\r\n} from '@material-ui/core';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useDispatch } from 'react-redux';\r\nimport { authenticate } from '../../store/actions/auth';\r\nimport { AuthOptions } from '../../constants/authOptions';\r\nimport { Input } from '../../UI/Input';\r\nimport withErrorHandler from '../../withErrorHandler/withErrorHandler';\r\n\r\nconst Auth = ({ history }) => {\r\n  const disptach = useDispatch();\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      userId: '',\r\n      authMethod: AuthOptions.SIGNIN,\r\n    },\r\n    validationSchema: Yup.object({\r\n      email: Yup.string().email('Invalid email address').required('Required'),\r\n      userId: Yup.string().required('Required'),\r\n    }),\r\n    onSubmit: async (values) => {\r\n      let url = `/api/users/${values.authMethod}`;\r\n      disptach(authenticate(url, values));\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Paper elevation={10} className='auth' title='We Study Authentication'>\r\n      <form onSubmit={formik.handleSubmit} className='auth__form'>\r\n        <RadioGroup\r\n          className='auth__radio'\r\n          aria-label='method'\r\n          name='authMethod'\r\n          value={formik.values.authMethod}\r\n          onChange={formik.handleChange}>\r\n          <FormControlLabel\r\n            value={AuthOptions.SIGNIN}\r\n            control={<Radio />}\r\n            label='Sign In'\r\n          />\r\n          <FormControlLabel\r\n            value={AuthOptions.SIGNUP}\r\n            control={<Radio />}\r\n            label='Sign Up'\r\n          />\r\n        </RadioGroup>\r\n        <Input\r\n          label='Email'\r\n          className='auth__input'\r\n          id='email'\r\n          name='email'\r\n          type='email'\r\n          onChange={formik.handleChange}\r\n          value={formik.values.email}\r\n          error={formik.touched.email && formik.errors.email}\r\n          errorMessage={formik.errors.email}\r\n          variant='outlined'\r\n        />\r\n        <Input\r\n          label='UserId'\r\n          className='auth__input'\r\n          id='userId'\r\n          name='userId'\r\n          type='text'\r\n          onChange={formik.handleChange}\r\n          value={formik.values.userId}\r\n          error={formik.touched.userId && formik.errors.userId}\r\n          errorMessage={formik.errors.userId}\r\n          variant='outlined'\r\n        />\r\n        <Button type='submit' variant='contained' color='primary' fullWidth>\r\n          Submit\r\n        </Button>\r\n      </form>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default withErrorHandler(Auth);\r\n","import React from 'react';\r\nimport './Navigation.scss';\r\nimport { Button } from '@material-ui/core';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { signOut } from '../../store/actions/auth';\r\n\r\nexport const Navigation = () => {\r\n  const dispatch = useDispatch();\r\n  const { user } = useSelector((state) => state.auth);\r\n  return (\r\n    <nav className='navigation'>\r\n      <p className='navigation__user-text'>Hello, {user.userId}</p>\r\n      <NavLink\r\n        className='navigation__item'\r\n        activeClassName='navigation__item--active'\r\n        to='/compose'>\r\n        <span> Compose</span>\r\n      </NavLink>\r\n      <NavLink\r\n        className='navigation__item'\r\n        activeClassName='navigation__item--active'\r\n        to='/manage'>\r\n        <span>Manage</span>\r\n      </NavLink>\r\n      <Button\r\n        color='secondary'\r\n        variant='contained'\r\n        onClick={() => {\r\n          dispatch(signOut());\r\n        }}>\r\n        Signout\r\n      </Button>\r\n    </nav>\r\n  );\r\n};\r\n","import React, { Suspense, useEffect } from 'react';\nimport './App.scss';\nimport { CircularProgress } from '@material-ui/core';\nimport { Redirect, Route, Switch, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\nimport Auth from '../Auth/Auth';\nimport { Navigation } from '../../components/Navigation/Navigation';\nimport { autoAuthenticate } from '../../store/actions/auth';\n\nconst ComposeEmail = React.lazy(() => import('../ComposeEmail/ComposeEmail'));\nconst ManageEmail = React.lazy(() => import('../ManageEmail/ManageEmail'));\n\nexport const App = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const auth = useSelector((state) => state.auth);\n\n  useEffect(() => {\n    dispatch(autoAuthenticate());\n  }, []);\n\n  useEffect(() => {\n    console.log(auth);\n    if (auth.isAuth) {\n      history.push('/');\n    }\n  }, [auth]);\n\n  let app = (\n    <>\n      <Route component={Auth} />\n      <Redirect from='/' to='/auth' />\n    </>\n  );\n  if (auth.isAuth) {\n    app = (\n      <>\n        <Navigation />\n        <Suspense fallback={<CircularProgress color='secondary' />}>\n          <Switch>\n            {/* <Route path='/auth' component={Auth} /> */}\n            <Route path='/compose' component={ComposeEmail} />\n            <Route path='/manage' component={ManageEmail} />\n            <Route component={() => <h1>Please select</h1>} />\n          </Switch>\n        </Suspense>\n        <ToastContainer />\n      </>\n    );\n  }\n  return <div className='container'>{app}</div>;\n};\n","import { AUTHENTICATE, SIGNOUT } from '../actions/auth';\r\n\r\nconst initialState = {\r\n  isAuth: false,\r\n  user: null,\r\n};\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case AUTHENTICATE:\r\n      return {\r\n        ...state,\r\n        isAuth: action.value && true,\r\n        user: action.value,\r\n        error: null,\r\n      };\r\n    case SIGNOUT:\r\n      return { ...state, isAuth: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { MessageType } from '../../constants/messageType';\r\nimport {\r\n  CREATE_MESSAGE,\r\n  DELETE_MESSAGE,\r\n  GET_MESSAGES,\r\n} from '../actions/message';\r\n\r\nconst initialSatate = {\r\n  messagesSent: [],\r\n  messagesReccived: [],\r\n};\r\n\r\nexport const messageReducer = (state = initialSatate, action) => {\r\n  switch (action.type) {\r\n    case CREATE_MESSAGE:\r\n      return state;\r\n    case GET_MESSAGES:\r\n      return {\r\n        messagesSent: action.messages.sended,\r\n        messagesReccived: action.messages.reccived,\r\n      };\r\n    case DELETE_MESSAGE:\r\n      let key =\r\n        action.messgeType === MessageType.To\r\n          ? 'messagesSent'\r\n          : 'messagesReccived';\r\n      return {\r\n        ...state,\r\n        [key]: state[key].filter((msg) => msg.id !== action.messageId),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport { authReducer } from './reducers/auth';\r\nimport { messageReducer } from './reducers/message';\r\n\r\n// unable composewithdevtools when production\r\nexport const store = createStore(\r\n  combineReducers({\r\n    auth: authReducer,\r\n    message: messageReducer,\r\n  }),\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport './config/axios';\nimport { App } from './containers/App/App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './store/storeConfig';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n","import axios from 'axios';\r\n\r\nexport const CREATE_MESSAGE = 'create-message';\r\nexport const DELETE_MESSAGE = 'delete-message';\r\nexport const GET_MESSAGES = 'get-messages';\r\n\r\nexport const createMessage = (message) => {\r\n  return (dispatch) => {\r\n    return new Promise((resolve) => {\r\n      axios.post('/api/message/create', message).then(() => {\r\n        dispatch({\r\n          type: CREATE_MESSAGE,\r\n        });\r\n        resolve();\r\n      });\r\n    });\r\n  };\r\n};\r\n\r\nexport const getMessages = (userId) => {\r\n  return async (dispatch) => {\r\n    const { data } = await axios.get(`/api/message/${userId}`);\r\n    dispatch({\r\n      type: GET_MESSAGES,\r\n      messages: data,\r\n    });\r\n  };\r\n};\r\n\r\nexport const deleteMessage = (messageId, messgeType) => {\r\n  return (dispatch) => {\r\n    return new Promise((resolve) => {\r\n      axios.delete(`/api/message/delete/${messageId}`).then(() => {\r\n        dispatch({\r\n          type: DELETE_MESSAGE,\r\n          messageId,\r\n          messgeType,\r\n        });\r\n        resolve();\r\n      });\r\n    });\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { TextField } from '@material-ui/core';\r\n\r\nexport const Input = (props) => {\r\n  return (\r\n    <>\r\n      <TextField {...props} />\r\n      {props.error ? <div>{props.errorMessage}</div> : null}\r\n    </>\r\n  );\r\n};\r\n"],"sourceRoot":""}